buildscript {
	ext {
		springBootVersion = '1.3.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
		classpath('io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

jar {
	baseName = 'spring-boot-solrcloud'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	//spring
	compile 'org.springframework.boot:spring-boot-starter-data-solr'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-aop'


	//logging
	compile('org.springframework.boot:spring-boot-starter-logging')
	compile('ch.qos.logback:logback-classic:1.1.7')
	compile('ch.qos.logback:logback-core:1.1.7')
	compile('org.codehaus.janino:janino:2.7.8')
	compile('net.kencochrane.raven:raven-logback:6.0.0')

	//utils
	compile 'commons-beanutils:commons-beanutils:1.9.2'
	compile('commons-lang:commons-lang:2.5')

	//test
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
